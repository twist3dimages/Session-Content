;A list of modules.


[/modules]

; CheckDisk - CheckDisk can check various file and disk related things. The current version has commands to check Size of hard drives and directories.
CheckDisk = 1

; Event log Checker. - Check for errors and warnings in the event log. This is only supported through NRPE so if you plan to use only NSClient this wont help you at all.
CheckEventLog = 1

; Check External Scripts - A simple wrapper to run external scripts and batch files.
CheckExternalScripts = 1

; Helper function - Various helper function to extend other checks. This is also only supported through NRPE.
CheckHelpers = 1

; Check NSCP - Checkes the state of the agent
CheckNSCP = 1

; CheckSystem - Various system related checks, such as CPU load, process state, service state memory usage and PDH counters.
CheckSystem = 1

; CheckTaskSched - CheckTaskSched can check various file and disk related things. The current version has commands to check Size of hard drives and directories.
CheckTaskSched = 1

; CheckWMI - CheckWMI can check various file and disk related things. The current version has commands to check Size of hard drives and directories.
CheckWMI = 1

; NRPE server - A simple server that listens for incoming NRPE connection and handles them.
NRPEServer = 1

; NSClient server - A simple server that listens for incoming NSClient (check_nt) connection and handles them. Although NRPE is the preferred method NSClient is fully supported and can be used for simplicity or for compatibility.
NSClientServer = 1


; Section for NRPE (NRPEListener.dll) (check_nrpe) protocol options.
[/settings/NRPE/server]

; COMMAND ARGUMENT PROCESSING - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; COMMAND ALLOW NASTY META CHARS - This option determines whether or not the we will allow clients to specify nasty (as in |`&><'"\[]{}) characters in arguments.
allow nasty characters = true

; PORT NUMBER - Port to use for NRPE.
port = 5666

; TIMEOUT - Timeout when reading packets on incoming sockets. If the data has not arrived within this time we will bail out. parent for this key is found under: /settings/default this is marked as advanced in favour of the parent.
timeout = 600


; Section for NSClient (NSClientServer.dll) (check_nt) protocol options.
[/settings/NSClient/server]

; PERFORMANCE DATA - Send performance data back to nagios (set this to 0 to remove all performance data).
performance data = true

; PORT NUMBER - Port to use for check_nt.
port = 12489

; TIMEOUT - Timeout when reading packets on incoming sockets. If the data has not arrived within this time we will bail out. parent for this key is found under: /settings/default this is marked as advanced in favour of the parent.
timeout = 600


; Configure crash handling properties.
[/settings/crash]

; ARCHIVE CRASHREPORTS - Archive crash reports in the archive folder
archive = true

; folder - The archive folder for crash dunpes.
archive folder = ${shared-path}/crash-dumps

; RESTART - Submit crash reports to nsclient.org (or your configured submission server)
restart = true

; RESTART SERVICE NAME - The url to submit crash reports to
restart target = nscp

; SUBMIT CRASHREPORTS - Submit crash reports to nsclient.org (or your configured submission server)
submit = false

; SUBMISSION URL - The url to submit crash reports to
submit url = http://crash.nsclient.org/submit


; Section for external scripts configuration options (CheckExternalScripts).
[/settings/external scripts]

; COMMAND ARGUMENT PROCESSING - This option determines whether or not the we will allow clients to specify arguments to commands that are executed.
allow arguments = true

; COMMAND ALLOW NASTY META CHARS - This option determines whether or not the we will allow clients to specify nasty (as in |`&><'"\[]{}) characters in arguments.
allow nasty characters = true

; SCRIPT DIRECTORY - Load all scripts in a directory and use them as commands. Probably dangerous but useful if you have loads of scripts :)
script path = 

; COMMAND TIMEOUT - The maximum time in seconds that a command can execute. (if more then this execution will be aborted). NOTICE this only affects external commands not internal ones.
timeout = 600


[/settings/external scripts/wrappings]
bat = scripts\%SCRIPT% %ARGS%
ps1 = cmd /c echo scripts\%SCRIPT% %ARGS%; exit($lastexitcode) | powershell.exe -command -
vbs = cscript.exe //T:540 //NoLogo scripts\lib\wrapper.vbs %SCRIPT% %ARGS%

; Windows Script File Scripts
wsf = cscript.exe //T:540 //NoLogo %SCRIPT% %ARGS%

; Perl Script files
pl = perl.exe %SCRIPT% %ARGS%


; A list of aliases available. An alias is an internal command that has been "wrapped" (to add arguments). Be careful so you don't create loops (ie check_loop=check_a, check_a=check_loop)
[/settings/external scripts/alias]

; alias_cpu - Alias for alias_cpu. To configure this item add a section called: /settings/external scripts/alias/alias_cpu
alias_cpu = checkCPU warn=$ARG1$ crit=$ARG2$ time=5m time=1m time=30s

; alias_disk - Alias for alias_disk. To configure this item add a section called: /settings/external scripts/alias/alias_disk
alias_disk = CheckDriveSize MinWarn=10% MinCrit=5% CheckAll FilterType=FIXED

; alias_event_log - Alias for alias_event_log. To configure this item add a section called: /settings/external scripts/alias/alias_event_log
alias_event_log = CheckEventLog file=application file=system filter=new filter=out MaxWarn=1 MaxCrit=1 filter-generated=>2d filter-severity==success filter-severity==informational truncate=1023 unique descriptions  "syntax=%severity%: %source%: %message% (%count%)"

; alias_mem - Alias for alias_mem. To configure this item add a section called: /settings/external scripts/alias/alias_mem
alias_checkMem = checkMem MaxWarn=$ARG2$ MaxCrit=$ARG3$ ShowAll type=$ARG1$

; alias_service - Alias for alias_service. To configure this item add a section called: /settings/external scripts/alias/alias_service
alias_service = checkServiceState CheckAll

; default - Alias for default. To configure this item add a section called: /settings/external scripts/alias/default
default = 

; nrpe_CheckDriveSize - Alias for nrpe_CheckDriveSize. To configure this item add a section called: /settings/external scripts/alias/nrpe_CheckDriveSize
nrpe_CheckDriveSize = inject CheckDriveSize MinWarn=25% MinCrit=15% CheckAll FilterType=FIXED

; nrpe_CheckService - Alias for nrpe_CheckService. To configure this item add a section called: /settings/external scripts/alias/nrpe_CheckService
nrpe_CheckService = inject checkServiceState CheckAll exclude=SysmonLog

; nrpe_Systeminfo - Alias for nrpe_Systeminfo. To configure this item add a section called: /settings/external scripts/alias/nrpe_Systeminfo
nrpe_Systeminfo = systeminfo.exe

; nrpe_Systeminfo_OS - Alias for nrpe_Systeminfo_OS. To configure this item add a section called: /settings/external scripts/alias/nrpe_Systeminfo_OS
nrpe_Systeminfo_OS = scripts\systeminfo_OS.bat

; nrpe_cpu - Alias for nrpe_cpu. To configure this item add a section called: /settings/external scripts/alias/nrpe_cpu
nrpe_cpu = inject checkCPU warn=80 crit=90 5 10 15

; nrpe_ok - Alias for nrpe_ok. To configure this item add a section called: /settings/external scripts/alias/nrpe_ok
nrpe_ok = scripts\ok.bat


; A list of scripts available to run from the CheckExternalScripts module. Syntax is: <command>=<script> <arguments>
[/settings/external scripts/scripts]

; check_ad - Alias for check_ad. To configure this item add a section called: /settings/external scripts/scripts/check_ad
check_ad = scripts/bernard/check_ad.exe --dc --noeventlog

; check_ad_time - Alias for check_ad_time. To configure this item add a section called: /settings/external scripts/scripts/check_ad_time
check_ad_time = cscript.exe //T:540 //NoLogo scripts\lib\wrapper.vbs scripts/bernard/check_ad_time.vbs

; check_kav_adminkit - Alias for check_kav_adminkit. To configure this item add a section called: /settings/external scripts/scripts/check_kav_adminkit
check_kav_adminkit = perl.exe scripts/bernard/check_kav_adminkit.pl $ARG1$ $ARG2$

; check_mssql_nt - Alias for check_mssql_nt. To configure this item add a section called: /settings/external scripts/scripts/check_mssql_nt
check_mssql_nt = scripts/bernard/check_mssql_nt.exe $ARG1$

; check_windows_raids - Alias for check_windows_raids. To configure this item add a section called: /settings/external scripts/scripts/check_windows_raids
check_windows_raids = cscript.exe //T:540 //NoLogo scripts/bernard/check_windows_raids.wsf

; check_windows_updates - Alias for check_windows_updates. To configure this item add a section called: /settings/external scripts/scripts/check_windows_updates
check_windows_updates = cscript.exe //T:540 //NoLogo scripts\lib\wrapper.vbs scripts/bernard/CheckWindowsUpdates.vbs

;helloworld = cscript.exe //T:540 //NoLogo scripts\lib\wrapper.vbs scripts/HelloWorld.vbs
helloworld = cscript.exe //T:540 //NoLogo scripts\lib\wrapper.vbs scripts/HelloWorld.vbs

; default - Alias for default. To configure this item add a section called: /settings/external scripts/scripts/default
default = 

; query_wmi - Alias for query_wmi. To configure this item add a section called: /settings/external scripts/scripts/query_wmi
query_wmi = cscript.exe //nologo //T:60 Scripts\query_wmi.vbs -class $ARG1$ -prop $ARG2$


[/settings/external scripts/scripts]
show_sysinfo = cscript.exe //nologo //T:60 scripts\show_sysinfo.vbs -h $ARG1$
show_services = cscript.exe //nologo //T:60 Scripts\show_services.vbs
show_hotfixes = cscript.exe //nologo //T:60 Scripts\show_hotfixes.vbs
scripts_version = cscript.exe //nologo //T:60 Scripts\scripts_version.vbs
show_system_info = cscript.exe //nologo //T:60 Scripts\system_info.vbs $ARG1$
show_net = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i network_interfaces
show_net_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i network_interfaces -user $ARG2$ -pass $ARG3$
show_disks = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i logical_disks
show_disks_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i logical_disks -user $ARG2$ -pass $ARG3$
show_procs = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i running_processes
show_procs_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i running_processes -user $ARG2$ -pass $ARG3$
show_cpus = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i all_processors
show_cpus_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_computer_info.vbs -h $ARG1$ -i all_processors -user $ARG2$ -pass $ARG3$
show_properties = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_counter_type.vbs $ARG1$ $ARG2$
show_properties_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_counter_type.vbs $ARG1$ $ARG2$ $ARG3$ $ARG4$
show_property_type = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_counter_type.vbs $ARG1$ $ARG2$ $ARG3$
show_property_type_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\get_counter_type.vbs $ARG1$ $ARG2$ $ARG3$ $ARG4$ $ARG5$
show_os = cscript.exe //nologo //T:60 NRPE_NT\plugins\verify_wmi_status.vbs -h $ARG1$
show_os_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\verify_wmi_status.vbs -h $ARG1$ -user $ARG2$ -pass $ARG3$


[/settings/external scripts/scripts]
check_winfile = NRPE_NT\plugins\check_winfile.exe $ARG1$

;# Example calls from check_nrpe:
;#     ./check_nrpe -H <IP1> -c show_properties -a <IP2> Win32_PerfRawData_PerfOS_Memory
;#     ./check_nrpe -H <IP1> -c show_property_type -a <IP2> Win32_PerfRawData_PerfOS_Memory WriteCopiesPersec

;# =================================
;# Disk percentage used checks
;# =================================
get_disk = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_disks_percentage_space_used.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$
get_disk_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_disks_percentage_space_used.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$ -user $ARG4$ -pass $ARG5$

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_disk -a <IP2> C:,D: 80,90:70,60

;# =================================
;# Memory percentage used checks
;# =================================
get_mem = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_memory_percentage_space_used.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$
get_mem_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_memory_percentage_space_used.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$ -user $ARG4$ -pass $ARG5$

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_mem -a <IP2> RAM,_TOTAL 80,90:80,90

;# =================================
;# CPU Load checks
;# =================================
get_cpu = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_cpu_load_percentage.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$
get_cpu_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_cpu_load_percentage.vbs -h $ARG1$ -inst $ARG2$ -t $ARG3$ -user $ARG4$ -pass $ARG5$

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_cpu -a <IP2> CPU0 80,90

;# =================================
;# Network IO checks
;# =================================
get_netio = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_network_io.vbs -h $ARG1$ -inst $ARG2$ -prop $ARG3$ -t $ARG4$
get_netio_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_network_io.vbs -h $ARG1$ -inst $ARG2$ -prop $ARG3$ -t $ARG4$ -user $ARG5$ -pass $ARG6$


;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_netio -a <IP2> "MS TCP Loopback Interface" "BytesReceivedPerSec" 300,1000

;# =================================
;# Disk IO checks
;# =================================
[/settings/external scripts/scripts]
get_diskio = cscript.exe //T:540 //NoLogo NRPE_NT\plugins\check_disks_io.vbs -h $ARG1$ -inst $ARG2$ -prop $ARG3$ -t $ARG4$
get_diskio_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_disks_io.vbs -h $ARG1$ -inst $ARG2$ -prop $ARG3$ -t $ARG4$ -user $ARG5$ -pass $ARG6$

 NRPE_NT\plugins\check_disks_io.vbs" -h "$ARG1$" -inst "$ARG2$" -prop "$ARG3$" -t "$ARG4$" -user "$ARG5$" -pass "$ARG6$"

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_diskio -a <IP2> C: "DiskReadBytesPerSec,DiskWriteBytesPerSec" 300,1000:500,2000

;# =================================
;# Service checks
;# =================================
get_service = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_services_states.vbs -h $ARG1$ -inst $ARG2$
get_service_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_services_states.vbs -h $ARG1$ -inst $ARG2$ -user $ARG3$ -pass $ARG4$

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_service -a <IP2> winmgmt,msdtc

;# =================================
;# Process checks
;# =================================
get_process = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_proc_num.vbs -h $ARG1$ -inst $ARG2$ -w $ARG3$ -c $ARG4$
get_process_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_proc_num.vbs -h $ARG1$ -inst $ARG2$ -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$

;# Example call from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_process -a <IP2> Name=svchost.exe,Name=cmd.exe 15 20
;#   (at present this plug-in does not support thresholds as minimums)

;# =================================
;# Counter checks
;# =================================
get_100nsec_timer = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_100nsec_timer.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_100nsec_timer_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_100nsec_timer.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$
get_counter_bulk_count = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_counter_bulk_count_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$
get_counter_counter = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_counter_counter_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$
get_counter_large_rawcount = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_large_rawcount.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_counter_large_rawcount_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_large_rawcount.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$
get_counter_rawcount = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_counter_rawcount_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$
get_raw_fraction = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_raw_fraction.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$
get_raw_fraction_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_raw_fraction.vbs -h $ARG1$ -class $ARG2$ -inst $ARG3$ -prop $ARG4$ -w $ARG5$ -c $ARG6$ -user $ARG7$ -pass $ARG8$

;# Example calls from check_nrpe:
;#     ./check_nrpe -H <IP1> -c get_100nsec_timer -a <IP2> Win32_PerfRawData_PerfOS_Processor Name=_Total PercentUserTime 80 90
;#     ./check_nrpe -H <IP1> -c get_counter_bulk_count -a <IP2> Win32_PerfRawData_PerfOS_System '*' FileControlBytesPerSec 50000 100000
;#     ./check_nrpe -H <IP1> -c get_counter_counter -a <IP2> Win32_PerfRawData_PerfOS_Processor Name=0,Name=1 InterruptsPerSec 20000 30000
;#     ./check_nrpe -H <IP1> -c get_counter_large_rawcount -a <IP2> Win32_PerfRawData_PerfProc_Process Name=spoolsv WorkingSet 10000000 20000000
;#     ./check_nrpe -H <IP1> -c get_counter_rawcount -a <IP2> Win32_PerfRawData_PerfProc_Process Name=spoolsv HandleCount 200 400
;#     ./check_nrpe -H <IP1> -c get_raw_fraction -a <IP2> Win32_PerfRawData_PerfDisk_LogicalDisk Name=C: PercentFreeSpace 40 60

;# Note: The above counter plug-ins are also used further below for obtaining information about specific Windows applications.  At present the
;# plug-ins don't supprt thresholds as minimums.  Refer to http://windowssdk.msdn.microsoft.com/en-us/library/ms758298.aspx
;# for documentation on performance counter types.

;# =================================
;# Updated checks from V1
;# =================================
get_swapping = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfOS_Memory" -inst "*" -prop "PagesPerSec" -w $ARG2$ -c $ARG3$
get_swapping_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfOS_Memory" -inst "*" -prop "PagesPerSec" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_disktransfers = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfDisk_PhysicalDisk" -inst $ARG2$ -prop "DiskTransfersPersec" -w $ARG3$ -c $ARG4$
get_disktransfers_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfDisk_PhysicalDisk" -inst $ARG2$ -prop "DiskTransfersPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_printqueue = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_Spooler_PrintQueue" -inst $ARG2$ -prop "Jobs" -w $ARG3$ -c $ARG4$
get_printqueue_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_Spooler_PrintQueue" -inst $ARG2$ -prop "Jobs" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_exchange_mbox_recvq = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISMailbox" -inst "Name=_Total" -prop "ReceiveQueueSize" -w $ARG2$ -c $ARG3$
get_exchange_mbox_recvq_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISMailbox" -inst "Name=_Total" -prop "ReceiveQueueSize" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_exchange_mbox_sendq = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISMailbox" -inst "Name=_Total" -prop "SendQueueSize" -w $ARG2$ -c $ARG3$
get_exchange_mbox_sendq_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISMailbox" -inst "Name=_Total" -prop "SendQueueSize" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_exchange_pub_recvq = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISPublic" -inst "Name=_Total" -prop "ReceiveQueueSize" -w $ARG2$ -c $ARG3$
get_exchange_pub_recvq_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISPublic" -inst "Name=_Total" -prop "ReceiveQueueSize" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_exchange_pub_sendq = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISPublic" -inst "Name=_Total" -prop "SendQueueSize" -w $ARG2$ -c $ARG3$
get_exchange_pub_sendq_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeIS_MSExchangeISPublic" -inst "Name=_Total" -prop "SendQueueSize" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_exchange_mta_workq = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeMTA_MSExchangeMTA" -inst "*" -prop "WorkQueueLength" -w $ARG2$ -c $ARG3$
get_exchange_mta_workq_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSExchangeMTA_MSExchangeMTA" -inst "*" -prop "WorkQueueLength" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_iis_bytes_received = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesReceivedPersec" -w $ARG3$ -c $ARG4$
get_iis_bytes_received_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesReceivedPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_bytes_sent = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesSentPersec" -w $ARG3$ -c $ARG4$
get_iis_bytes_sent_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesSentPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_bytes_total = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesTotalPersec" -w $ARG3$ -c $ARG4$
get_iis_bytes_total_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_bulk_count.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "BytesTotalPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_currentconnections = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "CurrentConnections" -w $ARG3$ -c $ARG4$
get_iis_currentconnections_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "CurrentConnections" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_curnonanonusers = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "CurrentNonAnonymousUsers" -w $ARG3$ -c $ARG4$
get_iis_curnonanonusers_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "CurrentNonAnonymousUsers" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_get_requests = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "GetRequestsPersec" -w $ARG3$ -c $ARG4$
get_iis_get_requests_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "GetRequestsPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_maximumconnections = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "MaximumConnections" -w $ARG3$ -c $ARG4$
get_iis_maximumconnections_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "MaximumConnections" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_post_requests = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop PostRequestsPersec" -w $ARG3$ -c $ARG4$
get_iis_post_requests_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "PostRequestsPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_iis_privatebytes = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_large_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfProc_Process" -inst "Name=inetinfo" -prop "PrivateBytes" -w $ARG2$ -c $ARG3$
get_iis_privatebytes_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_large_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_PerfProc_Process" -inst "Name=inetinfo" -prop "PrivateBytes" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_iis_totalnotfounderrors = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "TotalNotFoundErrors" -w $ARG3$ -c $ARG4$
get_iis_totalnotfounderrors_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_W3SVC_WebService" -inst $ARG2$ -prop "TotalNotFoundErrors" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_buf_cache_hit = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_raw_fraction.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerBufferManager" -inst "*" -prop "Buffercachehitratio" -w $ARG2$ -c $ARG3$
get_mssql_buf_cache_hit_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_raw_fraction.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerBufferManager" -inst "*" -prop "Buffercachehitratio" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_mssql_deadlocks = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "NumberofDeadlocksPersec" -w $ARG3$ -c $ARG4$
get_mssql_deadlocks_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "NumberofDeadlocksPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_fullscans = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerAccessMethods" -inst "*" -prop "FullScansPersec" -w $ARG2$ -c $ARG3$
get_mssql_fullscans_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerAccessMethods" -inst "*" -prop "FullScansPersec" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_mssql_latch_waits = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLatches" -inst "*" -prop "Latchwaitspersec" -w $ARG2$ -c $ARG3$
get_mssql_latch_waits_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLatches" -inst "*" -prop "Latchwaitspersec" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_mssql_lock_wait_time = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "LockWaitTimems" -w $ARG3$ -c $ARG4$
get_mssql_lock_wait_time_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "LockWaitTimems" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_lock_waits = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "LockWaitsPersec" -w $ARG3$ -c $ARG4$
get_mssql_lock_waits_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerLocks" -inst $ARG2$ -prop "LockWaitsPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_log_growth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "LogGrowths" -w $ARG3$ -c $ARG4$
get_mssql_log_growth_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "LogGrowths" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_log_used = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "PercentLogUsed" -w $ARG3$ -c $ARG4$
get_mssql_log_used_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "PercentLogUsed" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_memgrantspending = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerMemoryManager" -inst "*" -prop "MemoryGrantsPending" -w $ARG2$ -c $ARG3$
get_mssql_memgrantspending_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerMemoryManager" -inst "*" -prop "MemoryGrantsPending" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$
get_mssql_transactions = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "TransactionsPersec" -w $ARG3$ -c $ARG4$
get_mssql_transactions_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_counter.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerDatabases" -inst $ARG2$ -prop "TransactionsPersec" -w $ARG3$ -c $ARG4$ -user $ARG5$ -pass $ARG6$
get_mssql_users = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerGeneralStatistics" -inst "*" -prop "UserConnections" -w $ARG2$ -c $ARG3$
get_mssql_users_auth = cscript.exe //nologo //T:60 NRPE_NT\plugins\check_counter_rawcount.vbs -h $ARG1$ -class "Win32_PerfRawData_MSSQLSERVER_SQLServerGeneralStatistics" -inst "*" -prop "UserConnections" -w $ARG2$ -c $ARG3$ -user $ARG4$ -pass $ARG5$


; ***end of plugins**

; A list of wrappped scripts (ie. using the template mechanism)
[/settings/external scripts/wrapped scripts]

; Check the Active Directory time offset
check_ad_time = scripts/bernard/check_ad_time.vbs

; Check for Microsoft Windows Updates
check_windows_updates = scripts/bernard/CheckWindowsUpdates.vbs

; Check the status of Windows RAID arrays
check_windows_raids = scripts/bernard/check_windows_raids.wsf

; Check Kaspersky administration kit
check_kav_adminkit = scripts/bernard/check_kav_adminkit.pl $ARG1$ $ARG2$


[/settings/default]

; ALLOWED HOSTS - A comaseparated list of allowed hosts. You can use netmasks (/ syntax) or * to create ranges.
allowed hosts = netminder.hosp.uhhg.org

; BIND TO ADDRESS - Allows you to bind server to a specific local address. This has to be a dotted ip address not a host name. Leaving this blank will bind to all available IP addresses.
bind to = 

; CACHE ALLOWED HOSTS - If hostnames should be cached, improves speed and security somewhat but wont allow you to have dynamic IPs for your nagios server.
cache allowed hosts = true

; PASSWORD - Password used to authenticate againast server
password = 4starZ

; TIMEOUT - Timeout when reading packets on incoming sockets. If the data has not arrived within this time we will bail out.
timeout = 600

; ENABLE SSL ENCRYPTION - This option controls if SSL should be enabled.
use ssl = true


[/settings/default/socket]
timeout = 900


; Section for system checks and system settings
[/settings/check/system/windows]

; DEFAULT COUNTERS - Load the default counters: cpu, memory commit bytes, memory commit limit and uptime If not you need to specify these manually. 
default = true

; DEFAULT LENGTH - Used to define the default intervall for range buffer checks (ie. CPU).
default buffer length = 1h


; Confiure which services has to be in which state
[/settings/check/system/windows/service mapping]


; Section for system checks and system settings
[/settings/check/task schedule]

; SYNTAX - Set this to use a specific syntax string for all commands (that don't specify one)
default buffer length = %title% last run: %most-recent-run-time% (%exit-code%)


; Section for the EventLog Checker (CheckEventLog.dll).
[/settings/eventlog]

; BUFFER_SIZE - The size of the buffer to use when getting messages this affects the speed and maximum size of messages you can recieve.
buffer size = 131072

; DEBUG - Log more information when filtering (usefull to detect issues with filters) not usefull in production as it is a bit of a resource hog.
debug = false

; LOOKUP NAMES - Lookup the names of eventlog files
lookup names = true

; SYNTAX - Set this to use a specific syntax string for all commands (that don't specify one).
syntax = 


; A set of options to configure the real time checks
[/settings/eventlog/real-time]

; ALIAS - The alias to use for this event (in NSCA this constitutes the service name).
alias = eventlog

; DESTINATION - The destination for intercepted messages
destination = NSCA

; ENABLE ACTIVE MONITORING - This will store all matches so you can use real-time filters from active monitoring (use CheckEventlogCache).
enable active = false

; STARTUP AGE - The initial age to scan when starting NSClient++
filter = 

; MESSAGE LANGUAGE - The language to use for rendering message (mainly used fror testing)
language = 

; MAGIMUM AGE - How long before reporting "ok" (if this is set to off no ok will be reported only errors)
maximum age = 5m

; OK MESSAGE - This is the message sent periodically whenever no error is discovered.
ok message = eventlog found no records

; STARTUP AGE - The initial age to scan when starting NSClient++
syntax = %type% %source%: %message%

; DEBUG - Log missed records (usefull to detect issues with filters) not usefull in production as it is a bit of a resource hog.
debug = false

; REAL TIME CHECKING - Spawns a backgrounnd thread which detects issues and reports them back instantly.
enabled = false

; LOGS TO CHECK - Comma separated list of logs to check
log = application

; STARTUP AGE - The initial age to scan when starting NSClient++
startup age = 30m


; A set of filters to use in real-time mode
[/settings/eventlog/real-time/filters]


; Section for configuring the log handling.
[/settings/log]

; DATEMASK - The size of the buffer to use when getting messages this affects the speed and maximum size of messages you can recieve.
date format = %Y-%m-%d %H:%M:%S

; FILENAME - The file to write log data to. Set this to none to disable log to file.
file name = ${exe-path}/nsclient.log

; LOG LEVEL - Log level to use. Avalible levels are error,warning,info,debug,trace
level = error
;level = debug


; Configure log file properties.
[/settings/log/file]

; MAXIMUM FILE SIZE - When file size reaches this it will be truncated to 50% if set to 0 (default) truncation will be disabled
max size = 10000000


; Section for configuring the shared session.
[/settings/shared session]

; LOG LEVEL - Log level to use
enabled = True
