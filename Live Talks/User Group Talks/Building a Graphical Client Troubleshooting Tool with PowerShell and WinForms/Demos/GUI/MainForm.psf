<File version="2">
  <FileID>e5725b72-7382-457d-b1c9-da179dc245cc</FileID>
  <Preview>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
SkF/dsoepZRSSt2m/M1f7vaXhV8qh/V63ZsHgEkRAOw21xGFlFJKKfUsbVarUvBlr18qh6cskxg1
imCwngDQKwJAr86GIYMNI0bX0YSUUkop9Txlb/+ZZgdGTTb0662iM/8GAUDuBZAJglJKKaXeoyz+
so6/cgAICrpQbHsCMcNTZSZKKaWUeq/mBaC2qevlAeDgwUPVTW09SlqglFJKqXdb29SJ5AfpLw8A
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBC
CCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQ
QgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEII
IYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQgghhBBCCCGE
EEIIIYQQQgghhBBCCCGEEEIIIYRsGL/3e/8/mRpFC4eoSL4AAAAASUVORK5CYII=</Preview>
  <Object type="System.Windows.Forms.Form, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="MainForm" children="Controls">
    <Property name="ClientSize">994, 605</Property>
    <Property name="Name">MainForm</Property>
    <Property name="StartPosition">CenterScreen</Property>
    <Property name="Text">HelpDesk Tool</Property>
    <Event name="Load">MainForm_Load</Event>
    <Object type="System.Windows.Forms.DateTimePicker, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datetimepicker1" children="Controls">
      <Property name="Location">459, 34</Property>
      <Property name="Name">datetimepicker1</Property>
      <Property name="Size">200, 20</Property>
      <Property name="TabIndex">33</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox4" children="Controls">
      <Property name="Location">16, 314</Property>
      <Property name="Name">groupbox4</Property>
      <Property name="Size">664, 258</Property>
      <Property name="TabIndex">31</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Event Logs</Property>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxEventLog" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Location">105, 17</Property>
        <Property name="Name">comboboxEventLog</Property>
        <Property name="Size">121, 21</Property>
        <Property name="TabIndex">7</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelTimeframe" children="Controls">
        <Property name="Location">21, 63</Property>
        <Property name="Name">labelTimeframe</Property>
        <Property name="Size">78, 23</Property>
        <Property name="TabIndex">6</Property>
        <Property name="Text">Timeframe</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxDateFilter" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Last Hour</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Last Day</Item>
        </Property>
        <Property name="Location">105, 65</Property>
        <Property name="Name">comboboxDateFilter</Property>
        <Property name="Size">81, 21</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">Last Hour</Property>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEventType" children="Controls">
        <Property name="Location">21, 41</Property>
        <Property name="Name">labelEventType</Property>
        <Property name="Size">78, 18</Property>
        <Property name="TabIndex">4</Property>
        <Property name="Text">Event Type</Property>
      </Object>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewEventLogs" children="Controls">
        <Property name="AutoSizeColumnsMode">DisplayedCells</Property>
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="Location">21, 101</Property>
        <Property name="Name">datagridviewEventLogs</Property>
        <Property name="Size">622, 151</Property>
        <Property name="TabIndex">3</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonEventLogs" children="Controls">
        <Property name="Location">206, 63</Property>
        <Property name="Name">buttonEventLogs</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">2</Property>
        <Property name="Text">Submit</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonEventLogs_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelEventLog" children="Controls">
        <Property name="Location">21, 17</Property>
        <Property name="Name">labelEventLog</Property>
        <Property name="Size">58, 23</Property>
        <Property name="TabIndex">1</Property>
        <Property name="Text">Event Log</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxEventType" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Errors</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Warnings</Item>
        </Property>
        <Property name="Location">105, 41</Property>
        <Property name="Name">comboboxEventType</Property>
        <Property name="Size">81, 21</Property>
        <Property name="TabIndex">0</Property>
        <Property name="Text">Errors</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonConnect" children="Controls">
      <Property name="Location">199, 32</Property>
      <Property name="Name">buttonConnect</Property>
      <Property name="Size">75, 23</Property>
      <Property name="TabIndex">30</Property>
      <Property name="Text">Connect</Property>
      <Property name="UseVisualStyleBackColor">True</Property>
      <Event name="Click">buttonConnect_Click</Event>
    </Object>
    <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelConnectTo" children="Controls">
      <Property name="Location">16, 37</Property>
      <Property name="Name">labelConnectTo</Property>
      <Property name="Size">71, 14</Property>
      <Property name="TabIndex">27</Property>
      <Property name="Text">Connect To :</Property>
    </Object>
    <Object type="System.Windows.Forms.TextBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="txtBoxConnect" children="Controls">
      <Property name="Location">93, 34</Property>
      <Property name="Name">txtBoxConnect</Property>
      <Property name="Size">100, 20</Property>
      <Property name="TabIndex">26</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox3" children="Controls">
      <Property name="Location">505, 72</Property>
      <Property name="Name">groupbox3</Property>
      <Property name="Size">470, 236</Property>
      <Property name="TabIndex">25</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Windows Services</Property>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonShowServices" children="Controls">
        <Property name="Location">226, 35</Property>
        <Property name="Name">buttonShowServices</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">24</Property>
        <Property name="Text">Submit</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonShowServices_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelShow" children="Controls">
        <Property name="Location">37, 38</Property>
        <Property name="Name">labelShow</Property>
        <Property name="Size">59, 23</Property>
        <Property name="TabIndex">23</Property>
        <Property name="Text">Show</Property>
      </Object>
      <Object type="System.Windows.Forms.ComboBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="comboboxServices" children="Controls">
        <Property name="FormattingEnabled">True</Property>
        <Property name="Items">
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">All Services</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Stopped Services</Item>
          <Item type="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Disabled Services</Item>
        </Property>
        <Property name="Location">98, 35</Property>
        <Property name="Name">comboboxServices</Property>
        <Property name="Size">121, 21</Property>
        <Property name="TabIndex">22</Property>
        <Property name="Text">All Services</Property>
      </Object>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewServices" children="Controls">
        <Property name="AllowUserToOrderColumns">True</Property>
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="ContextMenuStrip">
          <Reference name="contextmenustripServices" />
        </Property>
        <Property name="Location">33, 62</Property>
        <Property name="Name">datagridviewServices</Property>
        <Property name="SelectionMode">FullRowSelect</Property>
        <Property name="Size">407, 154</Property>
        <Property name="TabIndex">20</Property>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox2" children="Controls">
      <Property name="Location">16, 72</Property>
      <Property name="Name">groupbox2</Property>
      <Property name="Size">472, 236</Property>
      <Property name="TabIndex">24</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">Installed Updates</Property>
      <Object type="System.Windows.Forms.DataGridView, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="datagridviewUpdates" children="Controls">
        <Property name="ColumnHeadersHeightSizeMode">AutoSize</Property>
        <Property name="Location">21, 62</Property>
        <Property name="Name">datagridviewUpdates</Property>
        <Property name="Size">426, 154</Property>
        <Property name="TabIndex">22</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonShowUpdates" children="Controls">
        <Property name="Location">21, 33</Property>
        <Property name="Name">buttonShowUpdates</Property>
        <Property name="Size">97, 23</Property>
        <Property name="TabIndex">20</Property>
        <Property name="Text">Show Updates</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonShowUpdates_Click</Event>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.StatusBar, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="statusbar1" children="Controls">
      <Property name="Location">0, 578</Property>
      <Property name="Name">statusbar1</Property>
      <Property name="Size">994, 27</Property>
      <Property name="TabIndex">23</Property>
      <Property name="Text">HelpDesk Tool</Property>
    </Object>
    <Object type="System.Windows.Forms.GroupBox, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="groupbox1" children="Controls">
      <Property name="Location">718, 379</Property>
      <Property name="Name">groupbox1</Property>
      <Property name="Size">200, 91</Property>
      <Property name="TabIndex">15</Property>
      <Property name="TabStop">False</Property>
      <Property name="Text">VNC</Property>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="labelVNCStatus" children="Controls">
        <Property name="Location">79, 27</Property>
        <Property name="Name">labelVNCStatus</Property>
        <Property name="Size">100, 23</Property>
        <Property name="TabIndex">8</Property>
        <Property name="Text">N/A</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonOpenVNC" children="Controls">
        <Property name="Location">104, 59</Property>
        <Property name="Name">buttonOpenVNC</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">7</Property>
        <Property name="Text">Open VNC</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonOpenVNC_Click</Event>
      </Object>
      <Object type="System.Windows.Forms.Label, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="label2" children="Controls">
        <Property name="Location">7, 30</Property>
        <Property name="Name">label2</Property>
        <Property name="Size">100, 23</Property>
        <Property name="TabIndex">5</Property>
        <Property name="Text">VNC Status:</Property>
      </Object>
      <Object type="System.Windows.Forms.Button, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="buttonDeployVNC" children="Controls">
        <Property name="Location">7, 59</Property>
        <Property name="Name">buttonDeployVNC</Property>
        <Property name="Size">75, 23</Property>
        <Property name="TabIndex">4</Property>
        <Property name="Text">Deploy VNC</Property>
        <Property name="UseVisualStyleBackColor">True</Property>
        <Event name="Click">buttonDeployVNC_Click</Event>
      </Object>
    </Object>
    <Object type="System.Windows.Forms.MenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="menustrip1" children="Controls">
      <Property name="Items">
        <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
          <Reference name="fileToolStripMenuItem" />
        </Item>
      </Property>
      <Property name="Location">0, 0</Property>
      <Property name="Name">menustrip1</Property>
      <Property name="Size">994, 24</Property>
      <Property name="TabIndex">11</Property>
      <Property name="Text">menustrip1</Property>
    </Object>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="fileToolStripMenuItem">
    <Property name="DropDownItems">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="exitToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">fileToolStripMenuItem</Property>
    <Property name="Size">37, 20</Property>
    <Property name="Text">File</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="exitToolStripMenuItem">
    <Property name="Name">exitToolStripMenuItem</Property>
    <Property name="Size">152, 22</Property>
    <Property name="Text">Exit</Property>
    <Event name="Click">exitToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ContextMenuStrip, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="contextmenustripServices" children="Controls">
    <Property name="Items">
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="enableToolStripMenuItem" />
      </Item>
      <Item type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <Reference name="startToolStripMenuItem" />
      </Item>
    </Property>
    <Property name="Name">contextmenustripServices</Property>
    <Property name="Size">110, 48</Property>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="enableToolStripMenuItem">
    <Property name="Name">enableToolStripMenuItem</Property>
    <Property name="Size">109, 22</Property>
    <Property name="Text">Enable</Property>
    <Event name="Click">enableToolStripMenuItem_Click</Event>
  </Object>
  <Object type="System.Windows.Forms.ToolStripMenuItem, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" name="startToolStripMenuItem">
    <Property name="Name">startToolStripMenuItem</Property>
    <Property name="Size">109, 22</Property>
    <Property name="Text">Start</Property>
    <Event name="Click">startToolStripMenuItem_Click</Event>
  </Object>
  <Code><![CDATA[#region Control Helper Functions
function Load-ComboBox 
{
<#
	.SYNOPSIS
		This functions helps you load items into a ComboBox.

	.DESCRIPTION
		Use this function to dynamically load items into the ComboBox control.

	.PARAMETER  ComboBox
		The ComboBox control you want to add items to.

	.PARAMETER  Items
		The object or objects you wish to load into the ComboBox's Items collection.

	.PARAMETER  DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER  Append
		Adds the item(s) to the ComboBox without clearing the Items collection.
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Load-ComboBox $combobox1 "Red" -Append
		Load-ComboBox $combobox1 "White" -Append
		Load-ComboBox $combobox1 "Blue" -Append
	
	.EXAMPLE
		Load-ComboBox $combobox1 (Get-Process) "ProcessName"
#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ComboBox]$ComboBox,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
	    [Parameter(Mandatory=$false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if(-not $Append)
	{
		$ComboBox.Items.Clear()	
	}
	
	if($Items -is [Object[]])
	{
		$ComboBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$ComboBox.BeginUpdate()
		foreach($obj in $Items)
		{
			$ComboBox.Items.Add($obj)	
		}
		$ComboBox.EndUpdate()
	}
	else
	{
		$ComboBox.Items.Add($Items)	
	}

	$ComboBox.DisplayMember = $DisplayMember	
}

function Clear-DataGridView
{
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNullOrEmpty()]
		[System.Windows.Forms.DataGridView]$DataGridView
	)
	
	$DataGridView.DataSource = $null
	$DataGridView.Refresh()
}

function Load-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{	
			$array.Add($Item)	
		}
		$DataGridView.DataSource = $array
	}
	
	$DataGridView.ResumeLayout()
}

function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterWMIProperties
			This switch removes WMI properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	[ValidateNotNull()]
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterWMIProperties)
	
	if($Table -eq $null)
	{
		$Table = New-Object System.Data.DataTable
	}

	if($InputObject-is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	else
	{
		if(-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()

			if($InputObject -eq $null){ return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach($item in $InputObject)
			{
				if($item -ne $null)
				{
					$object = $item
					break	
				}
			}

			if($object -eq $null) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if(-not $FilterWMIProperties -or -not $prop.Name.StartsWith('__'))#filter out WMI properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if($prop.Value -ne $null)
					{
						try{ $type = $prop.Value.GetType() } catch {}
					}

					if($type -ne $null) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
		      			[void]$table.Columns.Add($prop.Name, $type) 
					}
					else #Type info not found
					{ 
						[void]$table.Columns.Add($prop.Name) 	
					}
				}
		    }
			
			if($object -is [System.Data.DataRow])
			{
				foreach($item in $InputObject)
				{	
					$Table.Rows.Add($item)
				}
				return  @(,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()	
		}
		
		foreach($item in $InputObject)
		{		
			$row = $table.NewRow()
			
			if($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}

	return @(,$Table)	
}

function Load-ListBox 
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.

	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.

	.PARAMETER  ListBox
		The ListBox control you want to add items to.

	.PARAMETER  Items
		The object or objects you wish to load into the ListBox's Items collection.

	.PARAMETER  DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER  Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Load-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Load-ListBox $listBox1 "Red" -Append
		Load-ListBox $listBox1 "White" -Append
		Load-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Load-ListBox $listBox1 (Get-Process) "ProcessName"
#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.ListBox]$ListBox,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Items,
	    [Parameter(Mandatory=$false)]
		[string]$DisplayMember,
		[switch]$Append
	)
	
	if(-not $Append)
	{
		$listBox.Items.Clear()	
	}
	
	if($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)	
	}

	$listBox.DisplayMember = $DisplayMember
}

function Toggle-Buttons
{
	<#
	.SYNOPSIS
		This function either enables or disables a set of buttons on the current form. It is primarily used to indicate if
		the tool is connected to a client or not.
		
	.EXAMPLE
		PS> Toggle-Buttons -Status $true
	
		This example enables all buttons that attempt to make connections to the client.
		
	.PARAMETER Status
		This is a boolean value that either disables or enables all buttons that attempt to make connections to the client.
	#>
	[CmdletBinding()]
	param
	(
		[Parameter(Mandatory)]
		[ValidateNotNullOrEmpty()]
		[bool]$Status
	)
	$buttonOpenVNC.Enabled = $Status
	$buttonDeployVNC.Enabled = $Status
	$buttonEventLogs.Enabled = $Status
	$buttonShowUpdates.Enabled = $Status
	$buttonShowServices.Enabled = $Status
}
#endregion

$buttonDeployVNC_Click={
	try
	{
		Write-Status -Message 'Deploying VNC...'
		Deploy-VNC -ComputerName $ComputerName
		if (Test-VncInstalled -ComputerName $ComputerName)
		{
			$buttonOpenVNC.Enabled = $true
			$buttonDeployVNC.Enabled = $false
			$labelVNCStatus.Text = 'Installed'
			Write-Status -Message 'Successfully deployed VNC.'
		}
		else
		{
			throw 'VNC deployment failed.'	
		}
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonShowUpdates_Click = {
	try
	{
		Write-Status -Message 'Retrieving installed updates...'
		
		## Get all installed updates from the remote computer but only select the description and hotfixid. These are the only
		## fields we want populated in the datagrid view.
		$updates = Get-HotFix -ComputerName $ComputerName | select description,hotfixid
		
		## Load the results of the Get-Hotfix query.
		Load-DataGridView -DataGridView $datagridviewUpdates -Item $updates
		Write-Status -Message "Successfully retrieved installed updates."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonOpenVNC_Click= {
	try
	{
		## Always check for any external dependencies you reference before attempting to run them.
		if (-not (Test-Path -Path "$toolFileShare\vncviewer.exe" -PathType Leaf))
		{
			throw "The VNC viewer app at [$toolFileShare\vncviewer.exe] was not found."
		}
		## Open the VNC viewer EXE on the file share. Use the -connect argument to immediately connect to the remote client
		## the tool is connected to.
		& "$toolFileShare\vncviewer.exe" -connect $ComputerName
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$exitToolStripMenuItem_Click={
	## Close the application
	$MainForm.Close()
}

$buttonConnect_Click={
	try
	{
		if (-not $txtBoxConnect.Text) ## If the Connect text box is empty
		{
			## Rather than simply displaying the connection error in the status bar like all the other errors, you can choose
			## to be more obvious and display a message box. I use message boxes to display more critical errors that will affect
			## the entire tool as a whole.
			[System.Windows.Forms.MessageBox]::Show('No computer specified for connection', 'Invalid input', 0, 16)
			throw 'No computer specified for connection'
		}
		else
		{
			## $computername must be global because I'm going to be referencing it in various functions that will not be in the
			## same scope as the scriptblock we're in now.
			$global:ComputerName = $txtBoxConnect.Text
		}
		
		Write-Status -Message "Testing connectivity..."
		## Test to ensure the remote client can be pinged
		if (-not (Test-Connection -ComputerName $ComputerName -Count 1 -Quiet))
		{
			throw 'Computer is offline or does not exist.'
		}
		## We'll be using PS remoting to invoke a VNC deployment so that functionality must be working.
		elseif ((Invoke-Command -ComputerName $ComputerName -ScriptBlock { hostname }) -ne $ComputerName)
		{
			throw 'Computer cannot be connected to.'
		}
		else
		{
			## If the user connects to one computer and populates various datagrid views and then connects to another remote client
			## we need to make sure the previous client's information is not still displayed.
			$toClearDgvs = $datagridviewServices, $datagridviewUpdates
			foreach ($dgv in $toClearDgvs)
			{
				## Custom function built because more than one datagrid view will need to be cleared.
				Clear-DataGridView -DataGridView $dgv
			}
			
			## This changes the title bar of the form. This is good practice if you need to keep a persistent message up and
			## not be too obtrusive. Knowing what client the user connected to is useful information.
			$MainForm.Text = "Helpdesk Tool - Connected to $ComputerName"
			
			## Because we've chosen to allow the user to query the client's event logs, we need to prepopulate a combobox
			## This saves time when the user does eventually want to view the client's event logs. This retrieves all of the log
			## names and populates them into a combobox.
			Write-Status -Message 'Gathering event log sources...'
			$eventLogs = (Get-EventLog -ComputerName $ComputerName -LogName *).Log
			Load-ComboBox -ComboBox $comboboxEventLog -Items $eventLogs
			
			## Test to see if VNC is already installed using the Test-VNCInstalled function inside the VNC.ps1 script.
			## The result of this is reflected in the VNC status label which will indicate "Installed" if it's installed or 
			## "not installed" otherwise.
			Write-Status -Message 'Testing VNC install status...'
			if (Test-VNCInstalled -ComputerName $ComputerName)
			{
				$labelVNCStatus.Text = 'Installed'
				$buttonDeployVNC.Enabled = $false
			}
			else
			{
				$labelVNCStatus.Text = 'Not Installed'
				$buttonOpenVNC.Enabled = $false
			}
			
			## If the client successfully passed all of our prerequisite tests, consider it go to go and enable all of the buttons
			## that can make connections to it.
			Toggle-Buttons -Status $true
			
			## The throw command is typically used for error handling. However, in a GUI, it can also be a great way to simply
			## act as status messaging as well.
			throw "Connected to $ComputerName"
		}
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
}

$buttonShowServices_Click={
	try
	{
		## The helpdesk needed a way to easily find disabled and stopped Windows services. Depending on what was chosen
		## in the services combo box depends on the FilterScript we'll build to use with Get-Service.
		switch ($comboboxServices.Text) {
			'All Services' {
				Write-Status -Message "Retrieving all Windows services..."
				$whereFilter = {$_.Name -ne $null}
			}
			'Disabled Services' {
				Write-Status -Message "Retrieving all disabled Windows services..."
				$whereFilter = { $_.StartMode -eq 'Disabled'}
			}
			'Stopped Services' {
				Write-Status -Message "Retrieving all stopped Windows services..."
				$whereFilter = { $_.State -eq 'Stopped' }
			}
			default {
				throw 'Unknown service criteria'
			}
		}
		
		## Query all services with the FilterScript based off of the combo box. We only need to see certain fields in the datagrid
		## view so use Select-Object to only output those.
		$services = Get-WmiObject -ComputerName $ComputerName -Class Win32_Service | where $whereFilter | select displayname,state,startmode | sort displayName
		Load-DataGridView -DataGridView $datagridviewServices -Item $services
		Write-Status -Message "Successfully retrieved Windows services."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}

$buttonEventLogs_Click={
	try
	{
		switch ($comboboxEventType.Text)
		{
			'Errors' {
				$eventType = 'error'
			}
			'Warnings' {
				$eventType = 'warning'
			}
			default
			{
				throw 'Unknown event type'
			}
		}
		
		## Ensure the datagrid view is empty
		Clear-DataGridView -DataGridView $datagridviewEventLogs
		Write-Status -Message "Retrieving all events of type $eventType..."
		
		$params = @{
			'ComputerName' = $ComputerName
			'EntryType' = $eventType
			'LogName' = $comboboxEventLog.Text
		}
		switch ($comboboxDateFilter.Text) {
			'Last Hour' {
				$params.After = (Get-date).AddHours(-1)
			}
			'Last Day' {
				$params.After = (Get-date).AddDays(-1)
			}
			default {
				throw 'Unknown date filter.'
			}
		}

		$events = Get-EventLog @params | select timegenerated, message
		if (-not $events)
		{
			$events = [pscustomobject]@{ 'Status' = 'No events found' }
		}
		Load-DataGridView -DataGridView $datagridviewEventLogs -Item $events
		Write-Status -Message "Successfully retrieved Windows events."
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}

$MainForm_Load = {
	## Disable all of the buttons until a computer is connected
	Toggle-Buttons -Status $false
}

$enableToolStripMenuItem_Click={
	try
	{
		$serviceName = $datagridviewServices.CurrentRow.Cells[0].Value
		Write-Status -Message "Enabling the $serviceName Windows service..."
		Get-Service -ComputerName $ComputerName -DisplayName $serviceName | Set-Service -StartupType Automatic
		Write-Status -Message "Succesfully enabled the $serviceName Windows service"
	}
	catch
	{
		Write-Status -Message $_.Exception.Message	
	}
}

$startToolStripMenuItem_Click={
	try
	{
		$serviceName = $datagridviewServices.CurrentRow.Cells[0].Value
		Write-Status -Message "Starting the $serviceName Windows service..."
		Get-Service -ComputerName $ComputerName -DisplayName $serviceName | Start-Service
		Write-Status -Message "Succesfully starated the $serviceName Windows service"
	}
	catch
	{
		Write-Status -Message $_.Exception.Message
	}
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies>
    <Assembly>mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
    <Assembly>System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</Assembly>
    <Assembly>System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</Assembly>
  </Assemblies>
</File>